Configuration properties change between `2.0.0.M7` and `2.0.0.RC1`

.Deprecated keys in `2.0.0.RC1`
|======================
|Key  |Replacement |Reason
|`spring.flyway.sql-migration-suffix` | |
|======================

.New keys in `2.0.0.RC1`
|======================
|Key  |Default value |Description
|`management.endpoint.jolokia.config` | |Jolokia settings.
|`management.endpoint.jolokia.enabled` |`true` |Whether to enable the jolokia endpoint.
|`management.health.influxdb.enabled` |`true` |Whether to enable InfluxDB health check.
|`management.metrics.binders.jvm.enabled` |`true` |Whether to enable JVM metrics.
|`management.metrics.binders.logback.enabled` |`true` |Whether to enable Logback metrics.
|`management.metrics.binders.processor.enabled` |`true` |Whether to enable processor metrics.
|`management.metrics.binders.uptime.enabled` |`true` |Whether to enable uptime metrics.
|`management.metrics.cache.instrument` |`true` |Instrument all available caches.
|`management.metrics.cache.metric-name` |`cache` |Name of the metric for cache usage.
|`management.metrics.export.atlas.batch-size` | |Number of measurements per request to use for this backend.
|`management.metrics.export.atlas.config-refresh-frequency` | |Frequency for refreshing config settings from the LWC service.
|`management.metrics.export.atlas.config-time-to-live` | |Time to live for subscriptions from the LWC service.
|`management.metrics.export.atlas.config-uri` | |URI for the Atlas LWC endpoint to retrieve current subscriptions.
|`management.metrics.export.atlas.connect-timeout` | |Connection timeout for requests to this backend.
|`management.metrics.export.atlas.enabled` | |Whether exporting of metrics to this backend is enabled.
|`management.metrics.export.atlas.eval-uri` | |URI for the Atlas LWC endpoint to evaluate the data for a subscription.
|`management.metrics.export.atlas.lwc-enabled` | |Enable streaming to Atlas LWC.
|`management.metrics.export.atlas.meter-time-to-live` | |Time to live for meters that do not have any activity.
|`management.metrics.export.atlas.num-threads` | |Number of threads to use with the metrics publishing scheduler.
|`management.metrics.export.atlas.read-timeout` | |Read timeout for requests to this backend.
|`management.metrics.export.atlas.step` |`1m` |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.atlas.uri` | |URI of the Atlas server.
|`management.metrics.export.datadog.api-key` | |Datadog API key.
|`management.metrics.export.datadog.application-key` | |Datadog application key.
|`management.metrics.export.datadog.batch-size` | |Number of measurements per request to use for this backend.
|`management.metrics.export.datadog.connect-timeout` | |Connection timeout for requests to this backend.
|`management.metrics.export.datadog.descriptions` | |Whether to publish descriptions metadata to Datadog.
|`management.metrics.export.datadog.enabled` | |Whether exporting of metrics to this backend is enabled.
|`management.metrics.export.datadog.host-tag` | |Tag that will be mapped to "host" when shipping metrics to Datadog.
|`management.metrics.export.datadog.num-threads` | |Number of threads to use with the metrics publishing scheduler.
|`management.metrics.export.datadog.read-timeout` | |Read timeout for requests to this backend.
|`management.metrics.export.datadog.step` |`1m` |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.datadog.uri` | |URI to ship metrics to.
|`management.metrics.export.ganglia.addressing-mode` | |UDP addressing mode, either unicast or multicast.
|`management.metrics.export.ganglia.duration-units` | |Base time unit used to report durations.
|`management.metrics.export.ganglia.enabled` | |Enable publishing to Ganglia.
|`management.metrics.export.ganglia.host` | |Host of the Ganglia server to receive exported metrics.
|`management.metrics.export.ganglia.port` | |Port of the Ganglia server to receive exported metrics.
|`management.metrics.export.ganglia.protocol-version` | |Ganglia protocol version.
|`management.metrics.export.ganglia.rate-units` | |Base time unit used to report rates.
|`management.metrics.export.ganglia.step` | |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.ganglia.time-to-live` | |Time to live for metrics on Ganglia.
|`management.metrics.export.graphite.duration-units` | |Base time unit used to report durations.
|`management.metrics.export.graphite.enabled` | |Enable publishing to Graphite.
|`management.metrics.export.graphite.host` | |Host of the Graphite server to receive exported metrics.
|`management.metrics.export.graphite.port` | |Port of the Graphite server to receive exported metrics.
|`management.metrics.export.graphite.protocol` | |Protocol to use while shipping data to Graphite.
|`management.metrics.export.graphite.rate-units` | |Base time unit used to report rates.
|`management.metrics.export.graphite.step` | |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.graphite.tags-as-prefix` | |For the default naming convention, turn the specified tag keys into part of the metric prefix.
|`management.metrics.export.influx.batch-size` | |Number of measurements per request to use for this backend.
|`management.metrics.export.influx.compressed` | |Enable GZIP compression of metrics batches published to Influx.
|`management.metrics.export.influx.connect-timeout` | |Connection timeout for requests to this backend.
|`management.metrics.export.influx.consistency` | |Write consistency for each point.
|`management.metrics.export.influx.db` | |Tag that will be mapped to "host" when shipping metrics to Influx.
|`management.metrics.export.influx.enabled` | |Whether exporting of metrics to this backend is enabled.
|`management.metrics.export.influx.num-threads` | |Number of threads to use with the metrics publishing scheduler.
|`management.metrics.export.influx.password` | |Login password of the Influx server.
|`management.metrics.export.influx.read-timeout` | |Read timeout for requests to this backend.
|`management.metrics.export.influx.retention-policy` | |Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).
|`management.metrics.export.influx.step` |`1m` |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.influx.uri` | |URI of the Influx server.
|`management.metrics.export.influx.user-name` | |Login user of the Influx server.
|`management.metrics.export.jmx.enabled` |`true` |Whether exporting of metrics to JMX is enabled.
|`management.metrics.export.jmx.step` | |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.prometheus.descriptions` | |Enable publishing descriptions as part of the scrape payload to Prometheus.
|`management.metrics.export.prometheus.enabled` | |Enable publishing to Prometheus.
|`management.metrics.export.prometheus.step` | |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.simple.enabled` |`false` |Enable publishing to the backend.
|`management.metrics.export.simple.mode` | |Counting mode.
|`management.metrics.export.simple.step` |`10s` |Step size (i.e. reporting frequency) to use.
|`management.metrics.export.statsd.enabled` | |Export metrics to StatsD.
|`management.metrics.export.statsd.flavor` | |StatsD line protocol to use.
|`management.metrics.export.statsd.host` |`localhost` |Host of the StatsD server to receive exported metrics.
|`management.metrics.export.statsd.max-packet-length` |`1400` |Total length of a single payload should be kept within your network's MTU.
|`management.metrics.export.statsd.polling-frequency` |`10s` |How often gauges will be polled.
|`management.metrics.export.statsd.port` |`8125` |Port of the StatsD server to receive exported metrics.
|`management.metrics.export.statsd.queue-size` | |Maximum size of the queue of items waiting to be sent to the StatsD server.
|`management.metrics.jdbc.instrument` |`true` |Instrument all available data sources.
|`management.metrics.jdbc.metric-name` |`data.source` |Name of the metric for data source usage.
|`management.metrics.rabbitmq.instrument` |`true` |Instrument all available connection factories.
|`management.metrics.rabbitmq.metric-name` |`rabbitmq` |Name of the metric for RabbitMQ usage.
|`management.metrics.use-global-registry` |`true` |Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics.
|`management.metrics.web.client.max-uri-tags` |`100` |Maximum number of unique URI tag values allowed.
|`management.metrics.web.client.record-request-percentiles` |`false` |Whether instrumented requests record percentiles histogram buckets by default.
|`management.metrics.web.client.requests-metric-name` |`http.client.requests` |Name of the metric for sent requests.
|`management.metrics.web.server.auto-time-requests` |`true` |Whether requests handled by Spring MVC or WebFlux should be automatically timed.
|`management.metrics.web.server.record-request-percentiles` |`false` |Whether or not instrumented requests record percentiles histogram buckets by default.
|`management.metrics.web.server.requests-metric-name` |`http.server.requests` |Name of the metric for received requests.
|`management.server.servlet.context-path` |`` |Management endpoint context-path.
|`management.trace.enabled` |`true` |Whether to enable HTTP request-response tracing.
|`server.servlet.session.cookie.comment` | |
|`server.servlet.session.cookie.domain` | |
|`server.servlet.session.cookie.http-only` | |
|`server.servlet.session.cookie.max-age` | |
|`server.servlet.session.cookie.name` | |
|`server.servlet.session.cookie.path` | |
|`server.servlet.session.cookie.secure` | |
|`server.servlet.session.persistent` | |
|`server.servlet.session.store-dir` | |
|`server.servlet.session.timeout` | |
|`server.servlet.session.tracking-modes` | |
|`server.tomcat.use-relative-redirects` | |Whether HTTP 1.1 and later location headers generated by a call to sendRedirect will use relative or absolute redirects.
|`spring.banner.charset` |`UTF-8` |Banner file encoding.
|`spring.banner.image.height` | |Banner image height (in chars).
|`spring.banner.image.invert` |`false` |Whether images should be inverted for dark terminal themes.
|`spring.banner.image.location` |`banner.gif` |Banner image file location (jpg or png can also be used).
|`spring.banner.image.margin` | |Left hand image margin (in chars).
|`spring.banner.image.width` | |Banner image width (in chars).
|`spring.banner.location` |`classpath:banner.txt` |Banner text resource location.
|`spring.data.rest.default-media-type` | |Content type to use as a default when none is specified.
|`spring.data.web.pageable.max-page-size` |`2000` |Maximum page size to be accepted.
|`spring.data.web.pageable.one-indexed-parameters` |`false` |Whether to expose and assume 1-based page number indexes.
|`spring.data.web.pageable.prefix` |`` |General prefix to be prepended to the page number and page size parameters.
|`spring.data.web.pageable.qualifier-delimiter` |`_` |Delimiter to be used between the qualifier and the actual page number and size properties.
|`spring.flyway.dry-run-output` | |
|`spring.flyway.error-handlers` | |
|`spring.flyway.sql-migration-suffixes` | |
|`spring.flyway.undo-sql-migration-prefix` | |
|`spring.gson.date-format` | |Format to use when serializing Date objects.
|`spring.gson.disable-html-escaping` | |Whether to disable the escaping of HTML characters such as '<', '>', etc.
|`spring.gson.disable-inner-class-serialization` | |Whether to exclude inner classes during serialization.
|`spring.gson.enable-complex-map-key-serialization` | |Whether to enable serialization of complex map keys (i.e. non-primitives).
|`spring.gson.exclude-fields-without-expose-annotation` | |Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.
|`spring.gson.field-naming-policy` | |Naming policy that should be applied to an object's field during serialization and deserialization.
|`spring.gson.generate-non-executable-json` | |Whether to generate non executable JSON by prefixing the output with some special text.
|`spring.gson.lenient` | |Whether to be lenient about parsing JSON that doesn't conform to RFC 4627.
|`spring.gson.long-serialization-policy` | |Serialization policy for Long and long types.
|`spring.gson.pretty-printing` | |Whether to output serialized JSON that fits in a page for pretty printing.
|`spring.gson.serialize-nulls` | |Whether to serialize null fields.
|`spring.jta.atomikos.properties.default-max-wait-time-on-shutdown` | |How long should normal shutdown (no-force) wait for transactions to complete.
|`spring.kafka.listener.client-id` | |Prefix for the listener's consumer client.id property.
|`spring.kafka.listener.idle-event-interval` | |Time between publishing idle consumer events (no data received).
|`spring.kafka.listener.log-container-config` | |Whether to log the container configuration during initialization (INFO level).
|`spring.kafka.listener.monitor-interval` | |Time between checks for non-responsive consumers.
|`spring.kafka.listener.no-poll-threshold` | |Multiplier applied to "pollTimeout" to determine if a consumer is non-responsive.
|`spring.ldap.anonymous-read-only` |`false` |Whether read-only operations should use an anonymous environment.
|`spring.mvc.content-negotiation.favor-parameter` |`false` |Whether a request parameter ("format" by default) should be used to determine the requested media type.
|`spring.mvc.content-negotiation.favor-path-extension` |`false` |Whether the path extension in the URL path should be used to determine the requested media type.
|`spring.mvc.content-negotiation.media-types` | |Maps file extensions to media types for content negotiation, e.g. yml to text/yaml.
|`spring.mvc.content-negotiation.parameter-name` | |Query parameter name to use when "favor-parameter" is enabled.
|`spring.mvc.path-match.use-registered-suffix-pattern` |`false` |Whether suffix pattern matching should work only against extensions registered with "spring.mvc.content-negotiation.media-types.*".
|`spring.mvc.path-match.use-suffix-pattern` |`false` |Whether to use suffix pattern match (".*") when matching patterns to requests.
|`spring.rabbitmq.template.exchange` |`` |Name of the default exchange to use for send operations.
|`spring.rabbitmq.template.routing-key` |`` |Value of a default routing key to use for send operations.
|`spring.security.user.name` |`user` |Default user name.
|`spring.security.user.password` | |Password for the default user name.
|`spring.security.user.roles` | |Granted roles for the default user name.
|`spring.webflux.date-format` | |Date format to use.
|======================

.Removed keys in `2.0.0.RC1``
|======================
|Key  |Replacement |Reason
|`banner.charset` |`spring.banner.charset` |
|`banner.image.height` |`spring.banner.image.height` |
|`banner.image.invert` |`spring.banner.image.invert` |
|`banner.image.location` |`spring.banner.image.location` |
|`banner.image.margin` |`spring.banner.image.margin` |
|`banner.image.width` |`spring.banner.image.width` |
|`banner.location` |`spring.banner.location` |
|`flyway.ignore-failed-future-migration` | |
|`management.endpoint.sessions.cache.time-to-live` |`0` |Maximum time that a response can be cached.
|`management.endpoint.shutdown.cache.time-to-live` |`0` |Maximum time that a response can be cached.
|`management.endpoints.jmx.enabled` |`true` |Whether JMX endpoints are enabled.
|`management.endpoints.web.enabled` |`true` |Whether web endpoints are enabled.
|`management.jolokia.config` | |Jolokia settings.
|`management.jolokia.enabled` |`false` |Whether to enable Jolokia.
|`management.jolokia.path` |`/jolokia` |Path at which Jolokia is available.
|`management.server.context-path` |`` |Management endpoint context-path.
|`management.trace.filter.enabled` |`management.trace.enabled` |
|`server.session.cookie.comment` |`server.servlet.session.cookie.comment` |
|`server.session.cookie.domain` |`server.servlet.session.cookie.domain` |
|`server.session.cookie.http-only` |`server.servlet.session.cookie.http-only` |
|`server.session.cookie.max-age` |`server.servlet.session.cookie.max-age` |
|`server.session.cookie.name` |`server.servlet.session.cookie.name` |
|`server.session.cookie.path` |`server.servlet.session.cookie.path` |
|`server.session.cookie.secure` |`server.servlet.session.cookie.secure` |
|`server.session.persistent` |`server.servlet.session.persistent` |
|`server.session.store-dir` |`server.servlet.session.store-dir` |
|`server.session.timeout` |`server.servlet.session.timeout` |
|`server.session.tracking-modes` |`server.servlet.session.tracking-modes` |
|`spring.application.index` | |Application index.
|`spring.flyway.allow-mixed-migrations` | |
|`spring.flyway.ignore-failed-future-migration` | |
|`spring.jta.atomikos.properties.console-log-level` |`warn` |
|`spring.metrics.export.atlas.batch-size` | |Number of measurements per request to use for this backend.
|`spring.metrics.export.atlas.config-refresh-frequency` | |Frequency for refreshing config settings from the LWC service.
|`spring.metrics.export.atlas.config-time-to-live` | |Time to live for subscriptions from the LWC service.
|`spring.metrics.export.atlas.config-uri` | |URI for the Atlas LWC endpoint to retrieve current subscriptions.
|`spring.metrics.export.atlas.connect-timeout` | |Connection timeout for requests to this backend.
|`spring.metrics.export.atlas.enabled` | |Whether exporting of metrics to this backend is enabled.
|`spring.metrics.export.atlas.eval-uri` | |URI for the Atlas LWC endpoint to evaluate the data for a subscription.
|`spring.metrics.export.atlas.lwc-enabled` | |Enable streaming to Atlas LWC.
|`spring.metrics.export.atlas.meter-time-to-live` | |Time to live for meters that do not have any activity.
|`spring.metrics.export.atlas.num-threads` | |Number of threads to use with the metrics publishing scheduler.
|`spring.metrics.export.atlas.read-timeout` | |Read timeout for requests to this backend.
|`spring.metrics.export.atlas.step` |`1m` |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.atlas.uri` | |URI of the Atlas server.
|`spring.metrics.export.datadog.api-key` | |Datadog API key.
|`spring.metrics.export.datadog.batch-size` | |Number of measurements per request to use for this backend.
|`spring.metrics.export.datadog.connect-timeout` | |Connection timeout for requests to this backend.
|`spring.metrics.export.datadog.enabled` | |Whether exporting of metrics to this backend is enabled.
|`spring.metrics.export.datadog.num-threads` | |Number of threads to use with the metrics publishing scheduler.
|`spring.metrics.export.datadog.read-timeout` | |Read timeout for requests to this backend.
|`spring.metrics.export.datadog.step` |`1m` |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.datadog.uri` | |URI to ship metrics to.
|`spring.metrics.export.ganglia.addressing-mode` | |UDP addressing mode, either unicast or multicast.
|`spring.metrics.export.ganglia.duration-units` | |Base time unit used to report durations.
|`spring.metrics.export.ganglia.enabled` | |Enable publishing to Ganglia.
|`spring.metrics.export.ganglia.host` | |Host of the Ganglia server to receive exported metrics.
|`spring.metrics.export.ganglia.port` | |Port of the Ganglia server to receive exported metrics.
|`spring.metrics.export.ganglia.protocol-version` | |Ganglia protocol version.
|`spring.metrics.export.ganglia.rate-units` | |Base time unit used to report rates.
|`spring.metrics.export.ganglia.step` | |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.ganglia.time-to-live` | |Time to live for metrics on Ganglia.
|`spring.metrics.export.graphite.duration-units` | |Base time unit used to report durations.
|`spring.metrics.export.graphite.enabled` | |Enable publishing to Graphite.
|`spring.metrics.export.graphite.host` | |Host of the Graphite server to receive exported metrics.
|`spring.metrics.export.graphite.port` | |Port of the Graphite server to receive exported metrics.
|`spring.metrics.export.graphite.protocol` | |Protocol to use while shipping data to Graphite.
|`spring.metrics.export.graphite.rate-units` | |Base time unit used to report rates.
|`spring.metrics.export.graphite.step` | |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.influx.batch-size` | |Number of measurements per request to use for this backend.
|`spring.metrics.export.influx.compressed` | |Enable GZIP compression of metrics batches published to Influx.
|`spring.metrics.export.influx.connect-timeout` | |Connection timeout for requests to this backend.
|`spring.metrics.export.influx.consistency` | |Write consistency for each point.
|`spring.metrics.export.influx.db` | |Tag that will be mapped to "host" when shipping metrics to Influx.
|`spring.metrics.export.influx.enabled` | |Whether exporting of metrics to this backend is enabled.
|`spring.metrics.export.influx.num-threads` | |Number of threads to use with the metrics publishing scheduler.
|`spring.metrics.export.influx.password` | |Login password of the Influx server.
|`spring.metrics.export.influx.read-timeout` | |Read timeout for requests to this backend.
|`spring.metrics.export.influx.retention-policy` | |Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).
|`spring.metrics.export.influx.step` |`1m` |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.influx.uri` | |URI of the Influx server.
|`spring.metrics.export.influx.user-name` | |Login user of the Influx server.
|`spring.metrics.export.prometheus.descriptions` | |Enable publishing descriptions as part of the scrape payload to Prometheus.
|`spring.metrics.export.prometheus.enabled` | |Enable publishing to Prometheus.
|`spring.metrics.export.prometheus.step` | |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.simple.enabled` |`false` |Enable publishing to the backend.
|`spring.metrics.export.simple.mode` | |Counting mode.
|`spring.metrics.export.simple.step` |`10s` |Step size (i.e. reporting frequency) to use.
|`spring.metrics.export.statsd.enabled` | |Export metrics to StatsD.
|`spring.metrics.export.statsd.flavor` | |StatsD line protocol to use.
|`spring.metrics.export.statsd.host` |`management.metrics.export.statsd.host` |
|`spring.metrics.export.statsd.max-packet-length` |`1400` |Total length of a single payload should be kept within your network's MTU.
|`spring.metrics.export.statsd.polling-frequency` |`10s` |How often gauges will be polled.
|`spring.metrics.export.statsd.port` |`management.metrics.export.statsd.port` |
|`spring.metrics.export.statsd.queue-size` | |Maximum size of the queue of items waiting to be sent to the StatsD server.
|`spring.metrics.jdbc.datasource-metric-name` |`data.source` |Name of the metric for data source usage.
|`spring.metrics.jdbc.instrument-datasource` |`true` |Instrument all available data sources.
|`spring.metrics.use-global-registry` |`true` |Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics.
|`spring.metrics.web.client.record-request-percentiles` |`false` |Whether instrumented requests record percentiles histogram buckets by default.
|`spring.metrics.web.client.requests-metric-name` |`http.client.requests` |Name of the metric for sent requests.
|`spring.metrics.web.server.auto-time-requests` |`true` |Whether requests handled by Spring MVC or WebFlux should be automatically timed.
|`spring.metrics.web.server.record-request-percentiles` |`false` |Whether or not instrumented requests record percentiles histogram buckets by default.
|`spring.metrics.web.server.requests-metric-name` |`http.server.requests` |Name of the metric for received requests.
|`spring.mvc.media-types` |`spring.mvc.content-negotiation.media-types` |
|======================
